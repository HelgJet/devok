<style>
  .deck-of-cards-section .buttons {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.deck-of-cards-section .step-btn {
  padding: 10px 20px;
  margin: 0 5px;
  cursor: pointer;
}

.deck-of-cards-section .step-content {
  display: none;
}

.deck-of-cards-section .step-content.active {
  display: block;
}

.deck-of-cards-section .cards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
}

.deck-of-cards-section .card {
  position: relative;
  width: 100px;
  height: 140px;
  cursor: pointer;
  perspective: 1000px;
}

.deck-of-cards-section .card img {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  transition: transform 0.6s;
}

.deck-of-cards-section .card .card-back {
  transform: rotateY(0deg);
}

.deck-of-cards-section .card .card-front {
  transform: rotateY(180deg);
}

.deck-of-cards-section .card .card-front.hidden {
  display: none;
}

.deck-of-cards-section .card.flip .card-back {
  transform: rotateY(180deg);
}

.deck-of-cards-section .card.flip .card-front {
  transform: rotateY(0deg);
}

.deck-of-cards-section .shuffle-animation {
  animation: shuffle 0.5s ease-out;
}

@keyframes shuffle {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0);
  }
}

</style>

<div id="deck-of-cards-section" class="deck-of-cards-section">
  <div class="buttons">
    <button class="step-btn" data-step="1">Step 1</button>
    <button class="step-btn" data-step="2" onclick="shuffleDeck()">Step 2: Shuffle and Show</button>
    <button class="step-btn" data-step="3">Step 3</button>
  </div>

  <div class="step-content step-1 active">
    <div class="card" onclick="flipCard(this)">
      <img src="{{ 'back.png' | asset_url }}" alt="Card back" class="card-back">
      <img src="" alt="Card front" class="card-front hidden">
    </div>
  </div>

  <div class="step-content step-2">
    <div class="cards-container" id="cards-container">
      {% for i in (1..54) %}
        <div class="card" onclick="flipCard(this)">
          <img src="{{ 'back.png' | asset_url }}" alt="Card back" class="card-back">
          <img src="" alt="Card front" class="card-front hidden">
        </div>
      {% endfor %}
    </div>
  </div>

  <div class="step-content step-3">
    <div class="card" onclick="flipCard(this)">
      <img src="{{ 'back.png' | asset_url }}" alt="Card back" class="card-back">
      <img src="" alt="Card front" class="card-front hidden">
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const buttons = document.querySelectorAll('.step-btn');
  const stepContents = document.querySelectorAll('.step-content');

  // Перемикання між кроками
  buttons.forEach(button => {
    button.addEventListener('click', function() {
      const step = this.dataset.step;

      // Сховати всі кроки
      stepContents.forEach(content => {
        content.classList.remove('active');
      });

      // Показати вибраний крок
      document.querySelector(`.step-${step}`).classList.add('active');
    });
  });

  // Функція для перевертання карти
  window.flipCard = function(cardElement) {
    const cardBack = cardElement.querySelector('.card-back');
    const cardFront = cardElement.querySelector('.card-front');
    if (cardFront.classList.contains('hidden')) {
      cardFront.classList.remove('hidden');
      cardBack.classList.add('hidden');
    } else {
      cardFront.classList.add('hidden');
      cardBack.classList.remove('hidden');
    }
  };

  // Функція для перетасовки колоди
  window.shuffleDeck = function() {
    const cardsContainer = document.getElementById('cards-container');
    const cards = Array.from(cardsContainer.children);
    const shuffledCards = cards.sort(() => Math.random() - 0.5);

    // Очистити контейнер і додати перетасовані карти з анімацією
    cardsContainer.innerHTML = '';
    shuffledCards.forEach(card => {
      card.classList.add('shuffle-animation');
      cardsContainer.appendChild(card);
      setTimeout(() => card.classList.remove('shuffle-animation'), 1000);
    });

    // Додати зображення карт
    shuffledCards.forEach((card, index) => {
      const cardFront = card.querySelector('.card-front');
      cardFront.src = `https://deckofcardsapi.com/static/img/${getCardCode(index)}.png`;
    });
  };

  // Функція для отримання коду карти
  function getCardCode(index) {
    const suits = ['C', 'D', 'H', 'S'];
    const values = ['2', '3', '4', '5', '6', '7', '8', '9', '0', 'J', 'Q', 'K', 'A'];
    const suit = suits[Math.floor(index / 13)];
    const value = values[index % 13];
    return value + suit;
  }
});

</script>



{% schema %}
{
  "name": "Deck of Cards New Section",
  "settings": [],
  "presets": [
    {
      "name": "Deck of Cards New Section"
    }
  ]
}
{% endschema %}