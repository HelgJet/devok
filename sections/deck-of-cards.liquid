<style>
  .deck-of-cards-section .buttons {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.deck-of-cards-section .step-btn {
  padding: 10px 20px;
  margin: 0 5px;
  cursor: pointer;
}

.deck-of-cards-section .step-content {
  display: none;
}

.deck-of-cards-section .step-content.active {
  display: block;
}

.deck-of-cards-section .cards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
}

.deck-of-cards-section .card {
  flex: 1 1 calc(10% - 10px);
  box-sizing: border-box;
}

.deck-of-cards-section .card img {
  max-width: 100%;
  display: block;
}

</style>
<div id="deck-of-cards-section" class="deck-of-cards-section">
  <div class="buttons">
    <button class="step-btn" data-step="1">Step 1</button>
    <button class="step-btn" data-step="2" onclick="fetchDeckOfCards()">Step 2: Fetch Deck</button>
    <button class="step-btn" data-step="3">Step 3</button>
  </div>

  <div class="step-content step-1 active">
    <div class="card" onclick="toggleCardContent(1)">
      <p>Step 1: Card 1 Content</p>
    </div>
  </div>

  <div class="step-content step-2">
    <div class="cards-container" id="cards-container">
      <!-- Cards will be displayed here -->
    </div>
  </div>

  <div class="step-content step-3">
    <div class="card" onclick="toggleCardContent(3)">
      <p>Step 3: Card 1 Content</p>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  const buttons = document.querySelectorAll('.step-btn');
  const stepContents = document.querySelectorAll('.step-content');

  // Handle step navigation
  buttons.forEach(button => {
    button.addEventListener('click', function() {
      const step = this.dataset.step;

      // Hide all step content
      stepContents.forEach(content => {
        content.classList.remove('active');
      });

      // Show selected step content
      document.querySelector(`.step-${step}`).classList.add('active');
    });
  });

  // Function to toggle card content in Step 1 and Step 3
  window.toggleCardContent = function(step) {
    const card = document.querySelector(`.step-${step} .card`);
    if (card.innerHTML.includes('Card 1 Content')) {
      card.innerHTML = `<p>Step ${step}: Card 2 Content</p>`;
    } else {
      card.innerHTML = `<p>Step ${step}: Card 1 Content</p>`;
    }
  };

  // Function to fetch and display deck of cards from Deck of Cards API
  window.fetchDeckOfCards = function() {
    fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=54')
      .then(response => response.json())
      .then(data => {
        const cardsContainer = document.getElementById('cards-container');
        cardsContainer.innerHTML = ''; // Clear previous cards if any

        data.cards.forEach(card => {
          const cardElement = document.createElement('div');
          cardElement.className = 'card';
          cardElement.innerHTML = `<img src="${card.image}" alt="${card.value} of ${card.suit}" />`;
          cardsContainer.appendChild(cardElement);
        });
      })
      .catch(error => console.error('Error fetching cards:', error));
  };
});

</script>

{% schema %}
{
  "name": "Deck of Cards Section",
  "settings": [],
  "presets": [
    {
      "name": "Deck of Cards Section"
    }
  ]
}
{% endschema %}