<style>
  .deck-of-cards-section .buttons {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.deck-of-cards-section .step-btn {
  padding: 10px 20px;
  margin: 0 5px;
  cursor: pointer;
}

.deck-of-cards-section .step-content {
  display: none;
}

.deck-of-cards-section .step-content.active {
  display: block;
}

.deck-of-cards-section .cards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
}

.deck-of-cards-section .card {
  flex: 1 1 calc(10% - 10px);
  box-sizing: border-box;
}

.deck-of-cards-section .card img {
  max-width: 100%;
  display: block;
}

</style>
<div id="deck-of-cards-section" class="deck-of-cards-section">
  <div class="buttons">
    <button class="step-btn" data-step="1">Step 1</button>
    <button class="step-btn" data-step="2" onclick="fetchDeckOfCards()">Step 2: Swipe Deck</button>
    <button class="step-btn" data-step="3">Step 3</button>
  </div>

  <div class="step-content step-1 active">
    <div id="step1-card" class="card" onclick="changeCard('step1-card')">
      <p>Loading...</p>
    </div>
  </div>

  <div class="step-content step-2">
    <div class="cards-container" id="cards-container">
      <!-- Cards will be displayed here -->
    </div>
    <div class="swiper-navigation">
      <button class="swiper-button-prev" onclick="prevCard()">Previous</button>
      <button class="swiper-button-next" onclick="nextCard()">Next</button>
    </div>
  </div>

  <div class="step-content step-3">
    <div id="step3-card" class="card" onclick="changeCard('step3-card')">
      <p>Loading...</p>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const buttons = document.querySelectorAll('.step-btn');
  const stepContents = document.querySelectorAll('.step-content');
  let currentCardIndex = 0;
  let deck = [];

  // Handle step navigation
  buttons.forEach(button => {
    button.addEventListener('click', function() {
      const step = this.dataset.step;

      // Hide all step content
      stepContents.forEach(content => {
        content.classList.remove('active');
      });

      // Show selected step content
      document.querySelector(`.step-${step}`).classList.add('active');
    });
  });

  // Function to change card content in Step 1 and Step 3
  window.changeCard = function(cardId) {
    const card = document.getElementById(cardId);
    fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=1')
      .then(response => response.json())
      .then(data => {
        card.innerHTML = `<img src="${data.cards[0].image}" alt="${data.cards[0].value} of ${data.cards[0].suit}" />`;
      })
      .catch(error => console.error('Error fetching card:', error));
  };

  // Fetch deck of cards for Step 2
  window.fetchDeckOfCards = function() {
    fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=54')
      .then(response => response.json())
      .then(data => {
        deck = data.cards;
        displayCard(currentCardIndex);
      })
      .catch(error => console.error('Error fetching deck:', error));
  };

  // Display the current card in Step 2
  function displayCard(index) {
    const cardsContainer = document.getElementById('cards-container');
    cardsContainer.innerHTML = `<div class="card">
      <img src="${deck[index].image}" alt="${deck[index].value} of ${deck[index].suit}" />
    </div>`;
  }

  // Navigate to the previous card in Step 2
  window.prevCard = function() {
    if (currentCardIndex > 0) {
      currentCardIndex--;
      displayCard(currentCardIndex);
    }
  };

  // Navigate to the next card in Step 2
  window.nextCard = function() {
    if (currentCardIndex < deck.length - 1) {
      currentCardIndex++;
      displayCard(currentCardIndex);
    }
  };

  // Initialize first card for Step 1 and Step 3
  changeCard('step1-card');
  changeCard('step3-card');
});


</script>

{% schema %}
{
  "name": "Deck of Cards Section",
  "settings": [],
  "presets": [
    {
      "name": "Deck of Cards Section"
    }
  ]
}
{% endschema %}